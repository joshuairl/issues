#!/usr/bin/env node

/**
 * Module dependencies.
 */
var fs = require('fs');
var path = require('path');

/**
 * Help params.
 * 
 * @type {Object}
 */
var params = require('../lib/params');

/**
 * Argv.
 * 
 * @type {Object}
 */
var argv = require('optimist').options(params).argv;

/**
 * The request dispatcher.
 * 
 * @type {Function}
 */
var Dispatcher = require('../lib/dispatcher');

/**
 * Dispatcher instance.
 * 
 * @type {Object}
 */
var dispatcher = null;

/**
 * Error alias.
 * 
 * @type {Function}
 */
var error = console.error;

/**
 * The git config file path.
 * 
 * @type {String}
 */
var file = null;

/**
 * Current location.
 * 
 * @type {String}
 */
var location = process.cwd();

while (!file) {
  if (path.existsSync( file )) {
    file = location + '/.git/config';
  } else if (location !== '/') {
    location = path.dirname(location);
  } else {
    throw new Error('.git/config can not be located.');
  }
}

var r = fs.readFileSync(file,'utf-8').match(/url = git:\/\/github.com\/([^\/]+)\/([^\.]+).git/);

// Username.
argv._unshift(r[1]);

// Repo.
argv._unshift(r[2]);

// Handles exceptions.
process.on('uncaughtException', function(err) {
  error(err.message);
  process.exit(1);
});

// Dispatches the request.
dispatcher = new Dispatcher(argv).run();